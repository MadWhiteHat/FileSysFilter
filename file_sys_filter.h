#ifndef _FILESYS_FILTER_H
#define _FILESYS_FILTER_H

#define DRIVER_NAME L"filesysDriver"

#define DRIVER_CDO_NAME L"\\Device\\" DRIVER_NAME
#define DRIVER_USERMODE_NAME L"\\??\\" DRIVER_NAME

#define IOCTL_UPDATE_RULES \
CTL_CODE ( \
  FILE_DEVICE_UNKNOWN, \
  (0x800 + 0), \
  METHOD_BUFFERED, \
  FILE_SPECIAL_ACCESS \
)
#define IOCTL_SET_LOAD_IMAGE \
CTL_CODE ( \
  FILE_DEVICE_UNKNOWN, \
  (0x800 + 1), \
  METHOD_BUFFERED, \
  FILE_SPECIAL_ACCESS \
)
#define IOCTL_REMOVE_LOAD_IMAGE \
CTL_CODE ( \
  FILE_DEVICE_UNKNOWN, \
  (0x800 + 2), \
  METHOD_BUFFERED, \
  FILE_SPECIAL_ACCESS \
)

// Error codes
#define DRIVER_ERROR_SUCCESS 0L
#define DRIVER_ERROR_STATE \
  (1L << 31)
#define DRIVER_ERROR_LOG_FILE_ALREADY_OPENED \
  1L | DRIVER_ERROR_STATE
#define DRIVER_ERROR_LOG_FILE_NOT_OPENED \
  2L | DRIVER_ERROR_STATE
#define DRIVER_ERROR_LOG_FILE_CREATE_FAILED \
  3L | DRIVER_ERROR_STATE
#define DRIVER_ERROR_SET_LOAD_IMAGE \
  4L | DRIVER_ERROR_STATE
#define DRIVER_ERROR_LOAD_IMAGE_ALREADY_SET \
  5L | DRIVER_ERROR_STATE
#define DRIVER_ERROR_LOAD_IMAGE_REMOVE \
  6L | DRIVER_ERROR_STATE
#define DRIVER_ERROR_LOAD_IMAGE_ALREADY_REMOVED \
  7L | DRIVER_ERROR_STATE


// Availble operations
#define ALLOW_READ 1L
#define ALLOW_WRITE 2L

typedef struct _DRIVER_IO {
  int _resVal;
} DRIVER_IO, *PDRIVER_IO;

#endif // !_FILESYS_FILTER_H
